<div class="bs-docs-section">
  <div class="page-header">
    <h1>Filter <small>Behavior.Filter.js</small></h1>
  </div>
  <p>Filters a list of elements as you type.</p>

  <h3>Example</h3>
  <p>The easiest example is on display to your left in the navigation for Sandbox. Here's what it looks like:</p>
  <%= render layout: "codeblock" do %>
<div class="example">
  <div class="filter form-group">
    <div class="input-group input-group-sm input-group-rounded">
      <span class="<%= @bootstrap_styles ? 'input-group-addon' : 'input-group-btn' %>">
        <% if @bootstrap_styles %>
          <span class="glyphicon glyphicon-search"></span>
        <% else %>
          <button type="submit" class="btn"><span class="fui-search"></span></button>
        <% end %>
      </span>

      <input type="search" class="form-control" placeholder="Filter" id="search-query-9" data-behavior="Filter" data-filter-options="
        'items':'!.example li'
      ">
    </div>

  </div>
  <ul class="nav nav-list nav-list-vivid">
    <li class="nav-header">Europe</li>
    <li>
      <a href="#fakelink">
        London, United Kingdom
        <span class="badge pull-right">19</span>
      </a>
    </li>
    <li class="active">
      <a href="#fakelink">
        Berlin, Germany
        <span class="badge pull-right">130</span>
      </a>
    </li>
    <li>
      <a href="#fakelink">
        Madrid, Spain
        <span class="badge pull-right">9</span>
      </a>
    </li>
    <li class="divider"></li>
    <li class="nav-header">Asia</li>
    <li>
      <a href="#fakelink">
        Shanghai, China
        <span class="badge pull-right">69</span>
      </a>
    </li>
    <li>
      <a href="#fakelink">
        Bombay, India
        <span class="badge pull-right">21</span>
      </a>
    </li>
    <li>
      <a href="#fakelink">
        Karachi, Pakistan
        <span class="badge pull-right">40</span>
      </a>
    </li>
  </ul>
</div>
  <% end %>

  <div class="bs-callout bs-callout-info">
    <h4>Performance Considerations</h4>
    <p>
       This behavior iterates over all the children as the user types. It includes default rate limit such that
       key strokes that occur less than 200ms apart reset the timer, filtering only when the user stops typing.
       Still, extremely large lists with hundreds of items will likely introduce sluggish response times.
    </p>
  </div>

  <h2>Behavior Options</h2>
  <p>These options apply only to the <code>data-</code> tag invocation.</p>
  <div class="table-responsive">
    <table class="table table-striped table-bordered">
      <thead>
       <tr>
         <th style="width: 100px;">Name</th>
         <th style="width: 50px;">type</th>
         <th style="width: 50px;">default</th>
         <th>description</th>
       </tr>
      </thead>
      <tbody>
        <tr>
          <td>items</td>
          <td>string</td>
          <td>'+ul li',</td>
          <td>The items that get hidden as you elimate them when you type.</td>
        </tr>
        <tr>
          <td>text</td>
          <td>string</td>
          <td>'a'</td>
          <td>An (optional) sub-selector of the items that includes the search text (as their <code>innerHTML</code>). In the default configuration, it filters on
            the text inside the anchor tags of a list. <span class="label label-primary">Note</span> If an item does not have a matching <code>text</code> element
            the entire <code>innerHTML</code> of the item is used. In this case, if you had a list of links but also list items with text that was not a link,
            it would filter on the list item's <code>innerHTML</code> instead.</td>
        </tr>
        <tr>
          <td>hideClass</td>
          <td>string</td>
          <td>'hide'</td>
          <td>The class to add to items that do not match the filter.</td>
        </tr>
        <tr>
          <td>rateLimit</td>
          <td>number</td>
          <td>200</td>
          <td>The rate limit for typing; key strokes made within this duration reset the timer. Override this to zero if you want a very responsive list, but only
            if the list count is relatively short.</td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
