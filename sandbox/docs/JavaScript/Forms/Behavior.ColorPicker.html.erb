<div class="bs-docs-section">
  <div class="page-header">
    <h1>ColorPicker <small>Behavior.ColorPicker.js</small></h1>
  </div>
  <p>Displays a color picker for the user to select a color, updating the target input with the selected color.</p>

  <h3>Example</h3>
  <%= render layout: "codeblock" do %>
  <%
    imgs = {}
    ['moor_woverlay.png', 'moor_boverlay.png', 'blank.gif', 'moor_slider.png', 'moor_cursor.gif'].each do |filename|
      imgs[filename] = asset_path("color-picker/#{filename}")
    end
  %>
  <div class="box">
    <%= text_field_tag 'color', '#ffffff',
    class: 'form-control',
    data: {
      behavior: "ColorPicker",
      colorpicker_options: {
        imgs: imgs,
        startColor: [255,255,255],
        update: "!div.box"
      }
    } %>
  </div>
  <% end %>


  <h3>Behavior Options</h3>
  <p>Options can be passed via data attributes or JavaScript. For data attributes, append the option name to <code>data-</code>,
    as in <code>data-colorpicker-options="..."</code>.</p>

  <div class="bs-callout bs-callout-info">
    <h4>Image Assets</h4>
    <p>
      Because our JS assets are pre-compiled, they don't have references to our deployed assets. Consequently, you must
      pass the paths to the following images:</p>

      <ul>
        <li>moor_woverlay.png</li>
        <li>moor_boverlay.png</li>
        <li>blank.gif</li>
        <li>moor_slider.png</li>
        <li>moor_cursor.gif</li>
      </ul>

      <p>The easy way:</p>
      <pre class="prettyprint">imgs = {}
['moor_woverlay.png',
 'moor_boverlay.png',
 'blank.gif',
 'moor_slider.png',
 'moor_cursor.gif'].each do |filename|
  imgs[filename] = asset_path("color-picker/#{filename}")
end</pre>
      <p>...and then pass <code>imgs</code> to your filter (see ruby example below).</p>
  </div>

  <h4>Ruby Example</h4>
  <pre class="prettyprint">&lt;%= text_field_tag 'color', '#ffffff',
    class: 'form-control',
    data: {
      behavior: "ColorPicker",
      colorpicker_options: {
        imgs: imgs, //see below
        startColor: [255,255,255],
        update: "!div.box"
      }
    } %></pre>

    <h2>Behavior Options</h2>
    <p>These options apply only to the <code>data-</code> tag invocation. See the
    <%= link_to "MooRainbow docs", "http://moorainbow.woolly-sheep.net/#doc" %> for
    JavaScript options, methods, and events.</p>

  <div class="table-responsive">
    <table class="table table-striped table-bordered">
      <thead>
       <tr>
         <th style="width: 100px;">Name</th>
         <th style="width: 50px;">type</th>
         <th style="width: 50px;">default</th>
         <th>description</th>
       </tr>
      </thead>
      <tbody>
        <tr>
          <td>startColor</td>
          <td>string</td>
          <td>#ff0000 (red)</td>
          <td>The starting color.</td>
        </tr>
        <tr>
          <td>imgs</td>
          <td>array (of strings)</td>
          <td>~</td>
          <td>See above about Image Assets</td>
        </tr>
        <tr>
          <td>imgPath</td>
          <td>string</td>
          <td>~</td>
          <td>If provided, the images listed in the Image Assets section above will be references against this base path.</td>
        </tr>
        <tr>
          <td>update</td>
          <td>string</td>
          <td>~</td>
          <td>If set, defines the elements in the DOM to update colors when the user selects one.</td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
