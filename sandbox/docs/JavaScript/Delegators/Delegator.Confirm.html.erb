<div class="bs-docs-section">
  <div class="page-header">
    <h1>Confirm <small>Delegator.Confirm.js</small></h1>
  </div>

  <p>Prompts the user to confirm an action. Can be applied to a form control or a link.</p>

  <h3>Basic Usage</h3>
  <%= render layout: "codeblock" do %>
<%= link_to "Reload this page", url_for, class: 'btn btn-default', data: {
  trigger: 'confirm',
  confirm_options: {
    content: 'You sure you wanna do that?'
  }
} %>
  <% end %>

  <h3>The Double Check</h3>
  <p>For those actions you really want the user to be sure about, you can make them confirm <em>twice</em>.</p>

  <%= render layout: "codeblock" do %>
<%= link_to "Visit Fox News", "http://foxnews.com", class: 'btn btn-default', data: {
  trigger: 'confirm',
  confirm_options: {
    content: 'You sure you wanna do that?',
    doubleCheck: true
  }
} %>
  <% end %>

  <h3>HTML In Your Prompt</h3>
  <p>If you want to include some basic HTML, don't use the <code>content</code> option, use the <code>body</code> option.</p>

  <%= render layout: "codeblock" do %>
<%= link_to "Visit Bing", "http://foxnews.com", class: 'btn btn-default', data: {
  trigger: 'confirm',
  confirm_options: {
    body: '<p>You sure you wanna do that?</p><ol><li>Google is better.</li><li>See #1</li></ol>',
    doubleCheck: true
  }
} %>
  <% end %>

  <h3>Specifying a Method Other Than GET</h3>
  <p>If you specify a value for <code>data-method</code> (a Rails convention) then this filter will create a form out of your link
    and submit it with the approrpiate action. Here, a post:</p>

  <%= render layout: "codeblock" do %>
<%= link_to "Post it!", sandbox_echo_html_path(html: "<p>You posted it! <a href='#{url_for}'>Go back</a>.</p>"), class: 'btn btn-default', data: {
  trigger: 'confirm',
  method: 'post',
  confirm_options: {
    content: 'Post some stuff?'
  }
} %>
  <% end %>

  <h3>As a Submit Button</h3>
  <p>All the examples above apply the trigger to links. Here's what it looks like in a form.</p>

    <%= render layout: "codeblock" do %>
<form action="<%= sandbox_echo_html_path %>">
  <input type="hidden" name="html" value="<p>You posted it! <a href='<%= url_for %>'>Go back</a>.</p>">
  <input type="submit" class="btn btn-default" name="send" value="Send w/o prompting"/>
  <input type="submit" class="btn btn-default" name="send" value="Send w/ prompting" data-trigger="confirm" data-confirm-content="Post some stuff?"/>
</form>
    <% end %>


  <h2>Behavior Options</h2>
  <p>These options apply only to the <code>data-</code> tag invocation.</p>
  <div class="table-responsive">
    <table class="table table-striped table-bordered">
      <thead>
       <tr>
         <th style="width: 100px;">Name</th>
         <th style="width: 50px;">type</th>
         <th style="width: 50px;">default</th>
         <th>description</th>
       </tr>
      </thead>
      <tbody>
        <tr>
          <td>doubleCheck</td>
          <td>boolean</td>
          <td>false</td>
          <td>If <code>true</code> requires the user to confirm <em>twice</em>. They gotta really mean it.</td>
        </tr>
        <tr>
          <td>authInput</td>
          <td>string</td>
          <td>'#auth_form_id input[name=authenticity_token]'</td>
          <td>Rails requires that forms have authenticity tokens. The expectation is that this form will be in your
            layout somewhere, hidden.</td>
        </tr>
        <tr>
          <td>form</td>
          <td>string</td>
          <td>~</td>
          <td>Selector to find the form the element, when confirmed, submits. Not required for regular submit buttons,
            but this allows you to make links (or anything else) that will submit the form.</td>
        </tr>
        <tr>
          <td>caption</td>
          <td>string</td>
          <td>'Confirm'</td>
          <td>The caption in the popup.</td>
        </tr>
        <tr>
          <td>content</td>
          <td>string</td>
          <td>~</td>
          <td>The body text of the popup. See also: the <code>body</code> option below.</td>
        </tr>
        <tr>
          <td>body</td>
          <td>string</td>
          <td>~</td>
          <td>Same as <code>caption</code> but not wrapped in a <code>p</code> tag, so can contain any HTML you like.</td>
        </tr>
        <tr>
          <td>data-method</td>
          <td>string</td>
          <td>~</td>
          <td>The method to submit the link. This is a rails convention.<br/>
            <span class="label label-primary">Note</span> This is not a
            property of the behavior's configration like everything else here. This setting is a <code>data-method</code> property
            on the element.</td>
        </tr>



      </tbody>
    </table>
  </div>
</div>
